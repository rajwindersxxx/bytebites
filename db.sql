CREATE TABLE IF NOT EXISTS "public"."mealPlanning" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text",
    "recipeId" bigint,
    "userId" bigint,
    "mealType" "text" NOT NULL,
    "date" timestamp with time zone
);


ALTER TABLE "public"."mealPlanning" OWNER TO "postgres";


ALTER TABLE "public"."mealPlanning" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."MealPlanning_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."requiredIngredients" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "userId" bigint,
    "uniqueIngredientId" bigint,
    "recipeId" bigint,
    "requiredDate" timestamp with time zone
);


ALTER TABLE "public"."requiredIngredients" OWNER TO "postgres";


ALTER TABLE "public"."requiredIngredients" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."RequirededIngredint_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."bitebytesRecipes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "image" "text",
    "title" "text",
    "readyInMinutes" real,
    "servings" real,
    "sourceUrl" "text",
    "vegetarian" boolean,
    "vegan" boolean,
    "glutenFree" boolean,
    "dairyFree" boolean,
    "veryHealthy" boolean,
    "cheap" boolean,
    "veryPopular" boolean,
    "sustainable" boolean,
    "lowFodmap" boolean,
    "weightWatcherSmartPoints" integer,
    "gaps" "text",
    "preparationMinutes" "text",
    "cookingMinutes" "text",
    "aggregateLikes" integer,
    "healthScore" real,
    "creditsText" "text",
    "license" "text",
    "sourceName" "text",
    "pricePerServing" "text",
    "extendedIngredients" "jsonb"[],
    "summary" "text",
    "cuisines" "jsonb"[],
    "dishTypes" "jsonb"[],
    "diets" "jsonb"[],
    "occasions" "jsonb"[],
    "winePairing" "jsonb",
    "instructions" "text",
    "analyzedInstructions" "jsonb"[],
    "originalId" "text",
    "spoonacularScore" double precision,
    "spoonacularSourceUrl" "text",
    "imageType" "text"
);


ALTER TABLE "public"."bitebytesRecipes" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."bitebytesUser" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "email" "text" NOT NULL,
    "password" "text",
    "username" "text",
    "image" "text" DEFAULT '/user.png'::"text"
);


ALTER TABLE "public"."bitebytesUser" OWNER TO "postgres";


ALTER TABLE "public"."bitebytesUser" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."bitebytesuser_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);














CREATE TABLE IF NOT EXISTS "public"."countries" (
    "id" bigint NOT NULL,
    "countryCode" "text" NOT NULL,
    "countryName" "text"
);


ALTER TABLE "public"."countries" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."userIngredientList" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "userId" bigint,
    "name" "text",
    "amount" double precision,
    "unit" "text",
    "image" "text",
    "isPurchased" boolean DEFAULT false,
    "consistency" "text"
);


ALTER TABLE "public"."userIngredientList" OWNER TO "postgres";


COMMENT ON TABLE "public"."userIngredientList" IS 'This is a duplicate of extendedIngredients';



ALTER TABLE "public"."userIngredientList" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."customIngredients_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."extendedIngredients" (
    "id" bigint NOT NULL,
    "recipeId" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "aisle" "text",
    "image" "text",
    "consistency" "text",
    "name" "text",
    "nameClean" "text",
    "original" "text",
    "originalName" "text",
    "amount" double precision,
    "unit" "text",
    "meta" "text"[],
    "measures" "jsonb",
    "uniqueId" bigint NOT NULL
);


ALTER TABLE "public"."extendedIngredients" OWNER TO "postgres";


ALTER TABLE "public"."extendedIngredients" ALTER COLUMN "uniqueId" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."extendedIngredients_uniqueId_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);









CREATE TABLE IF NOT EXISTS "public"."likedRecipes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "userId" bigint,
    "recipeId" bigint NOT NULL
);


ALTER TABLE "public"."likedRecipes" OWNER TO "postgres";


ALTER TABLE "public"."likedRecipes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."likedRecipes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."savedRecipes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "userId" bigint,
    "quantity" bigint,
    "recipeId" bigint NOT NULL
);


ALTER TABLE "public"."savedRecipes" OWNER TO "postgres";


ALTER TABLE "public"."savedRecipes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."savedRecipes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);








ALTER TABLE ONLY "public"."mealPlanning"
    ADD CONSTRAINT "MealPlanning_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."requiredIngredients"
    ADD CONSTRAINT "RequirededIngredint_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."bitebytesRecipes"
    ADD CONSTRAINT "bitebytesRecipes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."bitebytesRecipes"
    ADD CONSTRAINT "bitebytesRecipes_title_key" UNIQUE ("title");



ALTER TABLE ONLY "public"."bitebytesUser"
    ADD CONSTRAINT "bitebytesUser_id_key" UNIQUE ("id");



ALTER TABLE ONLY "public"."bitebytesUser"
    ADD CONSTRAINT "bitebytesUser_pkey" PRIMARY KEY ("id", "email");



ALTER TABLE ONLY "public"."countries"
    ADD CONSTRAINT "countries_pkey" PRIMARY KEY ("id", "countryCode");



ALTER TABLE ONLY "public"."userIngredientList"
    ADD CONSTRAINT "customIngredients_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."extendedIngredients"
    ADD CONSTRAINT "extendedIngredients_pkey" PRIMARY KEY ("uniqueId");



ALTER TABLE ONLY "public"."extendedIngredients"
    ADD CONSTRAINT "extendedIngredients_uniqueId_key" UNIQUE ("uniqueId");






ALTER TABLE ONLY "public"."likedRecipes"
    ADD CONSTRAINT "likedRecipes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."savedRecipes"
    ADD CONSTRAINT "savedRecipes_pkey" PRIMARY KEY ("id");





ALTER TABLE ONLY "public"."savedRecipes"
    ADD CONSTRAINT "unique_userid_recipeid" UNIQUE ("userId", "recipeId");



ALTER TABLE ONLY "public"."likedRecipes"
    ADD CONSTRAINT "unique_userid_recipeid2" UNIQUE ("userId", "recipeId");



ALTER TABLE ONLY "public"."mealPlanning"
    ADD CONSTRAINT "MealPlanning_recipeId_fkey" FOREIGN KEY ("recipeId") REFERENCES "public"."bitebytesRecipes"("id");



ALTER TABLE ONLY "public"."mealPlanning"
    ADD CONSTRAINT "MealPlanning_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."bitebytesUser"("id");



ALTER TABLE ONLY "public"."requiredIngredients"
    ADD CONSTRAINT "RequirededIngredint_recipeId_fkey" FOREIGN KEY ("recipeId") REFERENCES "public"."bitebytesRecipes"("id");



ALTER TABLE ONLY "public"."requiredIngredients"
    ADD CONSTRAINT "RequirededIngredint_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."bitebytesUser"("id");









ALTER TABLE ONLY "public"."userIngredientList"
    ADD CONSTRAINT "customIngredients_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."bitebytesUser"("id");



ALTER TABLE ONLY "public"."extendedIngredients"
    ADD CONSTRAINT "extendedIngredients_recipeId_fkey" FOREIGN KEY ("recipeId") REFERENCES "public"."bitebytesRecipes"("id");



ALTER TABLE ONLY "public"."likedRecipes"
    ADD CONSTRAINT "likedRecipes_recipeId_fkey" FOREIGN KEY ("recipeId") REFERENCES "public"."bitebytesRecipes"("id");



ALTER TABLE ONLY "public"."likedRecipes"
    ADD CONSTRAINT "likedRecipes_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."bitebytesUser"("id");



ALTER TABLE ONLY "public"."requiredIngredients"
    ADD CONSTRAINT "requiredIngredients_uniqueIngredientId_fkey" FOREIGN KEY ("uniqueIngredientId") REFERENCES "public"."extendedIngredients"("uniqueId");



ALTER TABLE ONLY "public"."savedRecipes"
    ADD CONSTRAINT "savedRecipes_recipeId_fkey" FOREIGN KEY ("recipeId") REFERENCES "public"."bitebytesRecipes"("id");



ALTER TABLE ONLY "public"."savedRecipes"
    ADD CONSTRAINT "savedRecipes_userId_fkey" FOREIGN KEY ("userId") REFERENCES "public"."bitebytesUser"("id");














CREATE POLICY "Enable read access for all users" ON "public"."countries" FOR SELECT USING (true);







ALTER TABLE "public"."bitebytesRecipes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."bitebytesUser" ENABLE ROW LEVEL SECURITY;






ALTER TABLE "public"."countries" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."extendedIngredients" ENABLE ROW LEVEL SECURITY;



ALTER TABLE "public"."likedRecipes" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."mealPlanning" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."requiredIngredients" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."savedRecipes" ENABLE ROW LEVEL SECURITY;




ALTER TABLE "public"."userIngredientList" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."bitebytesRecipes";




ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."likedRecipes";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."requiredIngredients";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."savedRecipes";







GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

